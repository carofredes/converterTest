{"version":3,"sources":["store/currency/constants.js","store/currency/reducer.js","store/rootReducer.js","store/configStore.js","screenSizes.js","components/Header.style.js","exchange.png","components/Header.js","apiCalls/general.js","apiCalls/currency.js","store/currency/actions.js","components/TabContainer/ConversionResult/index.style.js","currencyExtras.js","components/TabContainer/ConversionResult/index.js","components/TabContainer/Converter/index.style.js","components/TabContainer/Converter/index.js","components/TabContainer/index.style.js","components/TabContainer/index.js","components/TableRates/index.style.js","components/TableRates/index.js","App.js","languageProvider/languageProvider.js","index.js"],"names":["CurrencyConstants","UPDATE_CURRENCY","UPDATE_CURRENCY_FAIL","UPDATE_YESTERDAY_CURRENCY","UPDATE_YESTERDAY_CURRENCY_FAIL","initialState","base","date","conversionOptions","rates","error","yesterdayValues","calculateRateDifference","yr","r","toFixed","CurrencyReducer","state","action","type","payload","Object","keys","sort","updateCurrencyInfo","currencyInfo","currencyYesterdayInfo","yestRates","ratesValues","map","rate","currency","yesterday","rateChange","updateYesterdayCurrencyInfo","combineReducers","currencyReducer","middleware","thunk","store","createStore","rootReducer","applyMiddleware","size","screenSizes","medium","plus","tablet","big","desktop","MDBNavbarWrapper","styled","div","displayName","Header","src","logo","className","alt","id","baseAddress","getYesterdayDateStr","today","Date","setDate","getDate","day","month","getMonth","year","getFullYear","GETCurrencyLatest","axios","url","method","CurrencyActionCreators","getEuroYesterdayRatess","dispatch","a","data","console","log","message","getYesterdayCurrencyValue","getEuroLatest","getCurrencyLatest","ResultsWrapper","currencyExtraInfo","EUR","description","flag","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","ConversionResult","calculateConversion","props","amountBase","conversionBase","this","currentBase","md","Component","ConverterWrapper","MDBContainer","Converter","updateAmountBase","e","value","target","valueAsNumber","setState","disableConvert","handleChangeBase","requestCurrencyLatest","handleChangeSelect","name","handleConvert","showConversion","handleRevertCurrencies","amountConverted","prevProps","formatMessage","intl","htmlFor","placeholder","required","onChange","cOption","outline","aria-label","onClick","icon","color","disabled","injectIntl","connect","ContainerWrapper","TabContainer","toggle","tab","activeItem","requestEuroLatest","link","to","active","role","far","tabId","TableContainerWrapper","TableRates","requestYesterdayCurrencyValue","hover","App","currentAppLocale","navigator","languages","language","userLanguage","locale","messages","englishMessages","spanishMessages","textComponent","React","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33d0a4b8.chunk.js","sourcesContent":["const CurrencyConstants = {\n\tUPDATE_CURRENCY: 'UPDATE_CURRENCY',\n\tUPDATE_CURRENCY_FAIL: 'UPDATE_CURRENCY_FAIL',\n\tUPDATE_YESTERDAY_CURRENCY: 'UPDATE_YESTERDAY_CURRENCY',\n\tUPDATE_YESTERDAY_CURRENCY_FAIL: 'UPDATE_YESTERDAY_CURRENCY_FAIL'\n};\n\nexport default CurrencyConstants;\n","import CurrencyConstants from './constants';\n\nconst BASE_CURRENCY = 'EUR';\nconst initialState = {\n\tbase: '',\n\tdate: '',\n\tconversionOptions: [],\n\trates: {},\n\terror: false,\n\tyesterdayValues: []\n};\n\nconst calculateRateDifference = (yr = 0, r = 0) => {\n\treturn (100 - (yr * 100) / r).toFixed(4);\n};\n\nconst updateYesterdayCurrencyInfo = (payload, state) => {\n\tconst {\n\t\tcurrencyInfo: { rates },\n\t\tcurrencyYesterdayInfo: { rates: yestRates, base }\n\t} = payload;\n\t// This is needed because the API doesnt include EUR currency when using EUR as base\n\tif (base === BASE_CURRENCY) {\n\t\tyestRates['EUR'] = 1;\n\t}\n\n\tconst ratesKeys = Object.keys(rates);\n\tconst ratesValues = ratesKeys.map((rate) => ({\n\t\tcurrency: rate,\n\t\trate: rates[rate].toFixed(4),\n\t\tyesterday: yestRates[rate].toFixed(4),\n\t\trateChange: calculateRateDifference(yestRates[rate], rates[rate])\n\t}));\n\n\treturn {\n\t\t...state,\n\t\tyesterdayValues: ratesValues\n\t};\n};\n\nconst updateCurrencyInfo = (payload, state) => {\n\tconst { rates, base, date } = payload;\n\t// This is needed because the API doesnt include EUR currency when using EUR as base\n\t// and it will break the app when comparing EUR with EUR\n\tif (base === BASE_CURRENCY) {\n\t\trates['EUR'] = 1;\n\t}\n\tconst conversionOptions = Object.keys(rates);\n\treturn {\n\t\t...state,\n\t\tbase,\n\t\tdate,\n\t\tconversionOptions: conversionOptions.sort(),\n\t\trates\n\t};\n};\n\nconst CurrencyReducer = (state, action) => {\n\tstate = state || initialState;\n\n\tswitch (action.type) {\n\t\tcase CurrencyConstants.UPDATE_CURRENCY:\n\t\t\treturn updateCurrencyInfo(action.payload, state);\n\t\tcase CurrencyConstants.UPDATE_CURRENCY_FAIL:\n\t\t\treturn { ...state, error: true };\n\t\tcase CurrencyConstants.UPDATE_YESTERDAY_CURRENCY:\n\t\t\treturn updateYesterdayCurrencyInfo(action.payload, state);\n\t\tcase CurrencyConstants.UPDATE_YESTERDAY_CURRENCY_FAIL:\n\t\t\treturn { ...state, error: true };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default CurrencyReducer;\n","import { combineReducers } from 'redux';\nimport currencyReducer from './currency/reducer';\n\nexport default combineReducers({\n\tcurrency: currencyReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\nexport default store;\n","const size = {\n\tsmall: '321px',\n\tmedium: '376px',\n\tplus: '415px',\n\ttablet: '768px',\n\tbig: '1025px',\n\tdesktop: '2561px'\n};\n\nexport const screenSizes = {\n\tmedium: `(min-width: ${size.medium})`,\n\tplus: `(min-width: ${size.plus})`,\n\ttablet: `(min-width: ${size.tablet})`,\n\tbig: `(min-width: ${size.big})`,\n\tdesktop: `(min-width: ${size.desktop})`\n};\n","import styled from 'styled-components';\nimport { screenSizes } from '../screenSizes';\n\nconst MDBNavbarWrapper = styled.div`\n\tcolor: #050505;\n\tpadding: 10px;\n\n\t.navbar-brand {\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t}\n\n\t.logo {\n\t\theight: 25px;\n\t\twidth: 25px;\n\t\ttransform: rotate(134deg);\n\t}\n\n\tstrong {\n\t\tfont-family: 'Work Sans', 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;\n\t\tcolor: #1f2667;\n\t\tfont-weight: 700;\n\t\tfont-size: 24px;\n\t\tpadding-left: 11px;\n\t}\n\n\t@media ${screenSizes.big} {\n\t\tpadding: 20px;\n\n\t\t.navbar-brand {\n\t\t\tmargin-left: 75px;\n\t\t\ttext-align: left;\n\t\t\twidth: auto%;\n\t\t}\n\t}\n`;\n\nMDBNavbarWrapper.displayName = 'MDBNavbarWrapper';\n\nexport default MDBNavbarWrapper;\n","export default __webpack_public_path__ + \"static/media/exchange.be4a24c9.png\";","import React from 'react';\nimport { MDBNavbarBrand } from 'mdbreact';\nimport MDBNavbarWrapper from './Header.style';\nimport { FormattedMessage } from 'react-intl';\nimport logo from '../exchange.png';\n\nfunction Header() {\n\treturn (\n\t\t<MDBNavbarWrapper>\n\t\t\t<MDBNavbarBrand>\n\t\t\t\t<img src={logo} className='logo' alt='logo' />\n\t\t\t\t<strong>\n\t\t\t\t\t<FormattedMessage id='App.header' />\n\t\t\t\t</strong>\n\t\t\t</MDBNavbarBrand>\n\t\t</MDBNavbarWrapper>\n\t);\n}\n\nexport default Header;\n","const baseAddress = 'https://api.ratesapi.io/api';\n\nconst jsonHeaders = {\n\tAccept: 'application/json',\n\t'Content-Type': 'application/json',\n\t'Csrf-Token': 'nocheck',\n};\n\nexport { baseAddress, jsonHeaders };\n","import axios from 'axios';\nimport { baseAddress } from './general';\n\nfunction getYesterdayDateStr() {\n\tconst today = new Date();\n\tlet yesterday = new Date(today);\n\tyesterday.setDate(yesterday.getDate() - 1);\n\n\tconst day = yesterday.getDate();\n\tconst month = yesterday.getMonth() + 1; // Since getMonth() returns month from 0-11 not 1-12\n\tconst year = yesterday.getFullYear();\n\n\treturn `${year}-${month}-${day}`;\n}\n\nexport function GETEuroLatest() {\n\treturn axios({\n\t\turl: `${baseAddress}/latest`,\n\t\tmethod: 'GET'\n\t});\n}\n\nexport function GETCurrencyLatest(currency) {\n\treturn axios({\n\t\turl: `${baseAddress}/latest?base=${currency} `,\n\t\tmethod: 'GET'\n\t});\n}\n\nexport function GETEuroYesterdayRates() {\n\treturn axios({\n\t\turl: `${baseAddress}/${getYesterdayDateStr()}`,\n\t\tmethod: 'GET'\n\t});\n}\nexport function GETYesterdayRates(currency) {\n\treturn axios({\n\t\turl: `${baseAddress}/${getYesterdayDateStr()}?base=${currency}`,\n\t\tmethod: 'GET'\n\t});\n}\n","import CurrencyConstants from './constants';\nimport { GETEuroLatest, GETCurrencyLatest, GETEuroYesterdayRates, GETYesterdayRates } from '../../apiCalls/currency';\n\nconst CurrencyActionCreators = {\n\tgetEuroYesterdayRatess: (currencyInfo) => async (dispatch) => {\n\t\ttry {\n\t\t\tconst { data: currencyYesterdayInfo } = await GETEuroYesterdayRates();\n\t\t\tdispatch({\n\t\t\t\ttype: CurrencyConstants.UPDATE_YESTERDAY_CURRENCY,\n\t\t\t\tpayload: { currencyInfo, currencyYesterdayInfo }\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log('error', error.message);\n\t\t\tdispatch({\n\t\t\t\ttype: CurrencyConstants.UPDATE_CURRENCY_FAIL\n\t\t\t});\n\t\t}\n\t},\n\tgetYesterdayCurrencyValue: (base) => async (dispatch) => {\n\t\ttry {\n\t\t\tconst { data: currencyInfo } = await GETCurrencyLatest(base);\n\t\t\tconst { data: currencyYesterdayInfo } = await GETYesterdayRates(base);\n\n\t\t\tdispatch({\n\t\t\t\ttype: CurrencyConstants.UPDATE_YESTERDAY_CURRENCY,\n\t\t\t\tpayload: { currencyInfo, currencyYesterdayInfo }\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log('error', error.message);\n\t\t\tdispatch({\n\t\t\t\ttype: CurrencyConstants.UPDATE_CURRENCY_FAIL\n\t\t\t});\n\t\t}\n\t},\n\tgetEuroLatest: () => async (dispatch) => {\n\t\ttry {\n\t\t\tconst { data: currencyInfo } = await GETEuroLatest();\n\n\t\t\tdispatch({\n\t\t\t\ttype: CurrencyConstants.UPDATE_CURRENCY,\n\t\t\t\tpayload: currencyInfo\n\t\t\t});\n\t\t\tdispatch(CurrencyActionCreators.getEuroYesterdayRatess(currencyInfo));\n\t\t} catch (error) {\n\t\t\tconsole.log('error', error.message);\n\t\t\tdispatch({\n\t\t\t\ttype: CurrencyConstants.UPDATE_CURRENCY_FAIL\n\t\t\t});\n\t\t}\n\t},\n\tgetCurrencyLatest: (base) => async (dispatch) => {\n\t\ttry {\n\t\t\tconst { data: currencyInfo } = await GETCurrencyLatest(base);\n\n\t\t\tdispatch({\n\t\t\t\ttype: CurrencyConstants.UPDATE_CURRENCY,\n\t\t\t\tpayload: currencyInfo\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log('error', error.message);\n\t\t\tdispatch({\n\t\t\t\ttype: CurrencyConstants.UPDATE_CURRENCY_FAIL\n\t\t\t});\n\t\t}\n\t}\n};\n\nexport default CurrencyActionCreators;\n","import styled from 'styled-components';\nimport { screenSizes } from '../../../screenSizes';\n\nconst ResultsWrapper = styled.div`\n\tpadding: 20px 0px;\n\n\t.amount-base {\n\t\tfont-size: 14px;\n\t\tcolor: #5c667b;\n\t\tfont-weight: 600;\n\t\tmargin-left: 0;\n\t\talign-items: center;\n\t}\n\n\t.amount-converted {\n\t\tflex-wrap: nowrap;\n\t\talign-items: flex-start;\n\t\tline-height: 34px;\n\t\tfont-size: 28px;\n\t\tfont-weight: 600;\n\t\tmargin-left: 0;\n\n\t\tp {\n\t\t\tmax-width: 80%;\n\t\t\toverflow: hidden;\n\t\t}\n\t}\n\n\t@media ${screenSizes.tablet} {\n\t\t.amount-base {\n\t\t\tfont-size: 16px;\n\t\t}\n\n\t\t.amount-converted {\n\t\t\tline-height: inherit;\n\t\t\tfont-size: 30px;\n\t\t\tflex-wrap: wrap;\n\t\t\talign-items: center;\n\t\t}\n\t}\n`;\n\nResultsWrapper.displayName = 'ResultsWrapper';\n\nexport default ResultsWrapper;\n","const currencyExtraInfo = {\n\tEUR: { description: 'Euro', flag: 'eu' },\n\tAUD: { description: 'Australian dollar', flag: 'au' },\n\tBGN: { description: 'Bulgarian lev', flag: 'bg' },\n\tBRL: { description: 'Brazilian real', flag: 'br' },\n\tCAD: { description: 'Canadian dollar', flag: 'ca' },\n\tCHF: { description: 'Swiss franc', flag: 'ch' },\n\tCNY: { description: 'Chinese Yuan Renminbi', flag: 'cn' },\n\tCZK: { description: 'Czech koruna', flag: 'cz' },\n\tDKK: { description: 'Danish krone', flag: 'dk' },\n\tGBP: { description: 'British Pound', flag: 'gb' },\n\tHKD: { description: 'Hong Kong Dollar', flag: 'hk' },\n\tHRK: { description: 'Croatian kuna', flag: 'hr' },\n\tHUF: { description: 'Hungarian forint', flag: 'hu' },\n\tIDR: { description: 'Indonesian rupiah', flag: 'id' },\n\tILS: { description: 'Israeli new shekel', flag: 'il' },\n\tINR: { description: 'Indian rupee', flag: 'in' },\n\tISK: { description: 'Icelandic krona', flag: 'is' },\n\tJPY: { description: 'Japanese yen', flag: 'jp' },\n\tKRW: { description: 'South Korean won', flag: 'kr' },\n\tMXN: { description: 'Mexican peso', flag: 'mx' },\n\tMYR: { description: 'Malaysian ringgit', flag: 'my' },\n\tNOK: { description: 'Norwegian krone', flag: 'no' },\n\tNZD: { description: 'New Zealand dollar', flag: 'nz' },\n\tPHP: { description: 'Philippine peso', flag: 'ph' },\n\tPLN: { description: 'Polish zloty', flag: 'pl' },\n\tRON: { description: 'Romanian leu', flag: 'ro' },\n\tRUB: { description: 'Russian ruble', flag: 'ru' },\n\tSEK: { description: 'Swedish krona', flag: 'se' },\n\tSGD: { description: 'Singapore dollar', flag: 'sg' },\n\tTHB: { description: 'Thai baht', flag: 'th' },\n\tTRY: { description: 'Turkish lira', flag: 'tr' },\n\tUSD: { description: 'United States dollar', flag: 'us' },\n\tZAR: { description: 'South African rand', flag: 'za' }\n};\n\nexport default currencyExtraInfo;\n","import React, { Component } from 'react';\nimport { MDBCol, MDBRow } from 'mdbreact';\nimport { FormattedMessage } from 'react-intl';\nimport ResultsWrapper from './index.style';\nimport currencyExtraInfo from '../../../currencyExtras';\nimport PropTypes from 'prop-types';\n\nclass ConversionResult extends Component {\n\tcalculateConversion = () => {\n\t\tconst { rates, amountBase, conversionBase } = this.props;\n\n\t\treturn amountBase * rates[conversionBase];\n\t};\n\n\trender() {\n\t\tconst { amountBase, rates, currentBase, conversionBase, date } = this.props;\n\t\treturn (\n\t\t\t<ResultsWrapper>\n\t\t\t\t{/* Result Container */}\n\t\t\t\t<MDBRow className='amount-base mb-3 mb-md-0'>\n\t\t\t\t\t<img src={`https://flagcdn.com/24x18/${currentBase && currencyExtraInfo[currentBase].flag}.png`} alt='flag' />\n\t\t\t\t\t<p className='m-0 ml-2'>{` ${amountBase || 0} ${\n\t\t\t\t\t\tcurrencyExtraInfo[currentBase].description || currentBase\n\t\t\t\t\t} =`}</p>\n\t\t\t\t</MDBRow>\n\t\t\t\t<MDBRow className='amount-converted mb-5'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`https://flagcdn.com/48x36/${conversionBase && currencyExtraInfo[conversionBase].flag}.png`}\n\t\t\t\t\t\talt='flag'\n\t\t\t\t\t/>\n\t\t\t\t\t<p className='m-0 ml-2'>{` ${this.calculateConversion()} ${\n\t\t\t\t\t\tcurrencyExtraInfo[conversionBase].description || conversionBase\n\t\t\t\t\t}`}</p>\n\t\t\t\t</MDBRow>\n\t\t\t\t<MDBRow>\n\t\t\t\t\t<MDBCol md='6'>\n\t\t\t\t\t\t<p className='mb-1 text-center text-md-left'>{`1 ${currentBase} = ${rates[conversionBase]} ${conversionBase}`}</p>\n\t\t\t\t\t</MDBCol>\n\t\t\t\t\t<MDBCol md='6'>\n\t\t\t\t\t\t<p className='mb-1 text-center text-md-right'>\n\t\t\t\t\t\t\t<FormattedMessage id='Converter.lastUpdate' /> {date}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</MDBCol>\n\t\t\t\t</MDBRow>\n\t\t\t</ResultsWrapper>\n\t\t);\n\t}\n}\n\nConversionResult.propTypes = {\n\tamountBase: PropTypes.number,\n\trates: PropTypes.shape({ currency: PropTypes.number }).isRequired,\n\tcurrentBase: PropTypes.string.isRequired,\n\tconversionBase: PropTypes.string.isRequired,\n\tdate: PropTypes.string.isRequired\n};\n\nexport default ConversionResult;\n","import styled from 'styled-components';\nimport { MDBContainer } from 'mdbreact';\n\nconst ConverterWrapper = styled(MDBContainer)`\n\tfont-weight: 500;\n\n\t.btn-convert {\n\t\tbackground-color: #81b214;\n\t}\n`;\n\nConverterWrapper.displayName = 'ConverterWrapper';\n\nexport default ConverterWrapper;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MDBRow, MDBCol, MDBBtn, MDBIcon } from 'mdbreact';\nimport { FormattedMessage } from 'react-intl';\nimport { injectIntl } from 'react-intl';\nimport CurrencyActionCreators from '../../../store/currency/actions';\nimport ConversionResult from '../ConversionResult';\nimport currencyExtraInfo from '../../../currencyExtras';\nimport ConverterWrapper from './index.style';\nimport PropTypes from 'prop-types';\n\nclass Converter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tamountBase: '',\n\t\t\tamountConverted: 0,\n\t\t\tcurrentBase: '',\n\t\t\tconversionBase: '',\n\t\t\tshowConversion: false,\n\t\t\tdisableConvert: true\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {\n\t\t\tcurrency: { base, conversionOptions }\n\t\t} = this.props;\n\t\tif (base !== prevProps.currency.base) {\n\t\t\tthis.setState({ currentBase: base });\n\t\t\tif (this.state.conversionBase === '') {\n\t\t\t\tthis.setState({ conversionBase: conversionOptions[0] });\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateAmountBase = (e) => {\n\t\tconst value = e.target.valueAsNumber || '';\n\n\t\tthis.setState({ amountBase: value, disableConvert: value < 0 || value === '' });\n\t};\n\n\thandleChangeBase = (e) => {\n\t\tconst { requestCurrencyLatest } = this.props;\n\t\tconst { value } = e.target;\n\t\tthis.setState({\n\t\t\tcurrentBase: value\n\t\t});\n\t\trequestCurrencyLatest(value);\n\t};\n\n\t/**\n\t * I could had only this method to control both selects\n\t * but as I need to call another function when the base changes,\n\t * I prefered to add another method specific for that\n\t */\n\thandleChangeSelect = (e) => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\thandleConvert = () => {\n\t\tthis.setState({ showConversion: true });\n\t};\n\n\thandleRevertCurrencies = () => {\n\t\tconst { requestCurrencyLatest } = this.props;\n\n\t\tconst { currentBase, conversionBase } = this.state;\n\t\tthis.setState({\n\t\t\tcurrentBase: conversionBase,\n\t\t\tconversionBase: currentBase\n\t\t});\n\t\trequestCurrencyLatest(conversionBase);\n\t};\n\n\trender() {\n\t\tconst { amountBase, amountConverted, showConversion, currentBase, conversionBase, disableConvert } = this.state;\n\t\tconst {\n\t\t\tcurrency: { conversionOptions, rates, date, error },\n\t\t\tintl: { formatMessage }\n\t\t} = this.props;\n\n\t\tif (error) {\n\t\t\treturn (\n\t\t\t\t<p className='text-center p-4'>\n\t\t\t\t\t<FormattedMessage id='Converter.error' />\n\t\t\t\t</p>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<ConverterWrapper className='p-3 p-lg-5'>\n\t\t\t\t<form className='d-flex flex-column'>\n\t\t\t\t\t<MDBRow>\n\t\t\t\t\t\t<MDBCol md='4' className='mb-3 mb-lg-0'>\n\t\t\t\t\t\t\t<label htmlFor='amountFromField' className='font-weight-bolder'>\n\t\t\t\t\t\t\t\t<FormattedMessage id='Converter.amount' />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tid='amountFromField'\n\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\tvalue={amountBase}\n\t\t\t\t\t\t\t\tplaceholder={formatMessage({\n\t\t\t\t\t\t\t\t\tid: 'Converter.amount.placeholder'\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={this.updateAmountBase}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MDBCol>\n\n\t\t\t\t\t\t<MDBCol md='8' className='mb-3 mb-lg-0'>\n\t\t\t\t\t\t\t<MDBRow>\n\t\t\t\t\t\t\t\t<MDBCol size='12' md='5'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='fromField' className='font-weight-bolder'>\n\t\t\t\t\t\t\t\t\t\t<FormattedMessage id='Converter.from' />\n\t\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tclassName='browser-default custom-select'\n\t\t\t\t\t\t\t\t\t\tid='fromField'\n\t\t\t\t\t\t\t\t\t\tname='currentBase'\n\t\t\t\t\t\t\t\t\t\tvalue={currentBase}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChangeBase}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{conversionOptions.map((cOption) => (\n\t\t\t\t\t\t\t\t\t\t\t<option key={cOption} value={cOption}>\n\t\t\t\t\t\t\t\t\t\t\t\t{cOption} - {cOption && currencyExtraInfo[cOption].description}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</MDBCol>\n\t\t\t\t\t\t\t\t<MDBCol size='12' md='2' className='d-flex align-items-end justify-content-center'>\n\t\t\t\t\t\t\t\t\t<MDBBtn\n\t\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\t\tclassName='m-3 m-md-0 mb-md-2 d-flex justify-content-center'\n\t\t\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\t\t\taria-label='Revert currencies'\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleRevertCurrencies}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon='exchange-alt' />\n\t\t\t\t\t\t\t\t\t</MDBBtn>\n\t\t\t\t\t\t\t\t</MDBCol>\n\t\t\t\t\t\t\t\t<MDBCol size='12' md='5'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='toField' className='font-weight-bolder'>\n\t\t\t\t\t\t\t\t\t\t<FormattedMessage id='Converter.to' />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tclassName='browser-default custom-select'\n\t\t\t\t\t\t\t\t\t\tid='toField'\n\t\t\t\t\t\t\t\t\t\tname='conversionBase'\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChangeSelect}\n\t\t\t\t\t\t\t\t\t\tvalue={conversionBase}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{conversionOptions.map((cOption) => (\n\t\t\t\t\t\t\t\t\t\t\t<option key={cOption} value={cOption}>\n\t\t\t\t\t\t\t\t\t\t\t\t{cOption} - {cOption && currencyExtraInfo[cOption].description}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</MDBCol>\n\t\t\t\t\t\t\t</MDBRow>\n\t\t\t\t\t\t</MDBCol>\n\t\t\t\t\t</MDBRow>\n\t\t\t\t\t{!showConversion && (\n\t\t\t\t\t\t<MDBBtn\n\t\t\t\t\t\t\tcolor='light-green'\n\t\t\t\t\t\t\tclassName='btn-convert mt-5  align-self-end'\n\t\t\t\t\t\t\tonClick={this.handleConvert}\n\t\t\t\t\t\t\tdisabled={disableConvert}\n\t\t\t\t\t\t\taria-label='Convert'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormattedMessage id='Converter.convert' />\n\t\t\t\t\t\t</MDBBtn>\n\t\t\t\t\t)}\n\t\t\t\t</form>\n\t\t\t\t{showConversion && (\n\t\t\t\t\t<ConversionResult\n\t\t\t\t\t\tamountBase={amountBase}\n\t\t\t\t\t\tcurrentBase={currentBase}\n\t\t\t\t\t\tamountConverted={amountConverted}\n\t\t\t\t\t\tconversionBase={conversionBase}\n\t\t\t\t\t\trates={rates}\n\t\t\t\t\t\tdate={date}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ConverterWrapper>\n\t\t);\n\t}\n}\n\nConverter.propTypes = {\n\tcurrency: PropTypes.shape({\n\t\tbase: PropTypes.string,\n\t\tconversionOptions: PropTypes.array,\n\t\trates: PropTypes.shape({ currency: PropTypes.number }),\n\t\tdate: PropTypes.string\n\t}).isRequired,\n\trequestCurrencyLatest: PropTypes.func\n};\n\nconst mapStateToProps = (state) => ({\n\tcurrency: state.currency\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\trequestCurrencyLatest: (base) => dispatch(CurrencyActionCreators.getCurrencyLatest(base))\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(Converter));\n","import styled from 'styled-components';\nimport { MDBContainer } from 'mdbreact';\nimport { screenSizes } from '../../screenSizes';\n\nconst ContainerWrapper = styled(MDBContainer)`\n\tmargin-top: 50px;\n\twidth: 90%;\n\tfont-family: Inter, sans-serif;\n\tcolor: #2e3c57;\n\tbackground: #fff;\n\tborder-radius: 5px;\n\tpadding: 0;\n\tmin-height: 50%;\n\tborder: 1px solid lightgrey;\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t.nav-link {\n\t\tcolor: #155799;\n\t}\n\n\t.tab-content {\n\t\tflex: 1;\n\t}\n\n\t@media ${screenSizes.big} {\n\t\tmargin-top: 100px;\n\t\twidth: 100%;\n\t}\n`;\n\nContainerWrapper.displayName = 'ContainerWrapper';\n\nexport default ContainerWrapper;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\nimport Converter from './Converter';\nimport CurrencyActionCreators from '../../store/currency/actions';\nimport ContainerWrapper from './index.style';\nimport PropTypes from 'prop-types';\n\nclass TabContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveItem: '1'\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { requestEuroLatest } = this.props;\n\t\trequestEuroLatest();\n\t}\n\n\ttoggle = (tab) => (e) => {\n\t\tif (this.state.activeItem !== tab) {\n\t\t\tthis.setState({\n\t\t\t\tactiveItem: tab\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { activeItem } = this.state;\n\t\treturn (\n\t\t\t<ContainerWrapper>\n\t\t\t\t<MDBNav className='nav-tabs'>\n\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t<MDBNavLink link to='#' active={activeItem === '1'} onClick={this.toggle('1')} role='tab'>\n\t\t\t\t\t\t\t<MDBIcon icon='coins' className='mr-2' /> <FormattedMessage id='Tabs.converter' />\n\t\t\t\t\t\t</MDBNavLink>\n\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t<MDBNavLink link to='#' active={activeItem === '2'} onClick={this.toggle('2')} role='tab'>\n\t\t\t\t\t\t\t<MDBIcon far icon='chart-bar' className='mr-2' />\n\t\t\t\t\t\t\t<FormattedMessage id='Tabs.charts' />\n\t\t\t\t\t\t</MDBNavLink>\n\t\t\t\t\t</MDBNavItem>\n\t\t\t\t</MDBNav>\n\t\t\t\t<MDBTabContent activeItem={activeItem}>\n\t\t\t\t\t<MDBTabPane tabId='1' role='tabpanel'>\n\t\t\t\t\t\t<Converter />\n\t\t\t\t\t</MDBTabPane>\n\t\t\t\t\t<MDBTabPane tabId='2' role='tabpanel'>\n\t\t\t\t\t\t<p className='mt-2 p-3'>\n\t\t\t\t\t\t\t<FormattedMessage id='App.commingSoon' />\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</MDBTabPane>\n\t\t\t\t</MDBTabContent>\n\t\t\t</ContainerWrapper>\n\t\t);\n\t}\n}\n\nTabContainer.propTypes = {\n\trequestEuroLatest: PropTypes.func\n};\n\nconst mapStateToProps = (state) => ({\n\tcurrencyInfo: state.currency\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\trequestEuroLatest: () => dispatch(CurrencyActionCreators.getEuroLatest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabContainer);\n","import styled from 'styled-components';\nimport { MDBContainer } from 'mdbreact';\nimport { screenSizes } from '../../screenSizes';\n\nconst TableContainerWrapper = styled(MDBContainer)`\n\tmargin-top: 50px;\n\tfont-family: Inter, sans-serif;\n\tcolor: #2e3c57;\n\tpadding: 0;\n\ttext-align: center;\n\n\t.table {\n\t\ttd {\n\t\t\twidth: 33%;\n\t\t}\n\t}\n\n\t.change-negative {\n\t\tcolor: #ff0000;\n\t}\n\t@media ${screenSizes.big} {\n\t\twidth: 90%;\n\n\t\t.table {\n\t\t\twidth: 70%;\n\t\t\tmargin: 0 auto;\n\t\t}\n\t}\n`;\n\nTableContainerWrapper.displayName = 'TableContainerWrapper';\n\nexport default TableContainerWrapper;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { MDBCol, MDBRow, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport { FormattedMessage } from 'react-intl';\nimport TableContainerWrapper from './index.style';\nimport CurrencyActionCreators from '../../store/currency/actions';\nimport currencyExtraInfo from '../../currencyExtras';\nimport PropTypes from 'prop-types';\n\nclass TableRates extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentBase: 'EUR'\n\t\t};\n\t}\n\n\thandleChangeBase = (e) => {\n\t\tconst { requestYesterdayCurrencyValue } = this.props;\n\t\tconst { value } = e.target;\n\t\tthis.setState({\n\t\t\tcurrentBase: value\n\t\t});\n\t\trequestYesterdayCurrencyValue(value);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tcurrencyInfo: { yesterdayValues, conversionOptions }\n\t\t} = this.props;\n\t\tconst { currentBase } = this.state;\n\t\treturn (\n\t\t\t<TableContainerWrapper>\n\t\t\t\t<h3 className='mb-4'>\n\t\t\t\t\t<FormattedMessage id='TableRates.title' />\n\t\t\t\t</h3>\n\t\t\t\t<MDBRow className='justify-content-center align-items-center mb-3'>\n\t\t\t\t\t<MDBCol size='12' md='3'>\n\t\t\t\t\t\t<label htmlFor='currentBaseField' className='font-weight-bolder'>\n\t\t\t\t\t\t\t<FormattedMessage id='TableRates.select.base' />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</MDBCol>\n\t\t\t\t\t<MDBCol size='12' md='3'>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tclassName='browser-default custom-select'\n\t\t\t\t\t\t\tid='currentBaseField'\n\t\t\t\t\t\t\tname='currentBaseField'\n\t\t\t\t\t\t\tvalue={currentBase}\n\t\t\t\t\t\t\tonChange={this.handleChangeBase}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{conversionOptions.map((cOption) => (\n\t\t\t\t\t\t\t\t<option key={cOption} value={cOption}>\n\t\t\t\t\t\t\t\t\t{cOption} - {cOption && currencyExtraInfo[cOption].description}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</MDBCol>\n\t\t\t\t</MDBRow>\n\t\t\t\t<MDBTable hover>\n\t\t\t\t\t<MDBTableHead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th className='text-left'>\n\t\t\t\t\t\t\t\t<FormattedMessage id='TableRates.th.currency' />\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<FormattedMessage id='TableRates.th.conversion' />\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th className='text-right'>\n\t\t\t\t\t\t\t\t<FormattedMessage id='TableRates.th.change' />\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</MDBTableHead>\n\t\t\t\t\t<MDBTableBody>\n\t\t\t\t\t\t{yesterdayValues.map((currency) => {\n\t\t\t\t\t\t\tif (currency.currency !== currentBase) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={currency.currency}>\n\t\t\t\t\t\t\t\t\t\t<td className='text-left'>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://flagcdn.com/24x18/${\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrency.currency && currencyExtraInfo[currency.currency].flag\n\t\t\t\t\t\t\t\t\t\t\t\t}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\talt='flag'\n\t\t\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t\t\t{currencyExtraInfo[currency.currency].description}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>{currency.rate}</td>\n\t\t\t\t\t\t\t\t\t\t<td className={currency.rateChange < 0 ? 'change-negative text-right' : 'text-right'}>\n\t\t\t\t\t\t\t\t\t\t\t{currency.rateChange}%\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else return <Fragment key='empty'></Fragment>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</MDBTableBody>\n\t\t\t\t</MDBTable>\n\t\t\t</TableContainerWrapper>\n\t\t);\n\t}\n}\n\nTableRates.propTypes = {\n\tcurrencyInfo: PropTypes.shape({\n\t\tbase: PropTypes.string,\n\t\tconversionOptions: PropTypes.array,\n\t\trates: PropTypes.shape({ currency: PropTypes.number }),\n\t\tdate: PropTypes.string,\n\t\tyesterdayValues: PropTypes.array\n\t}).isRequired,\n\trequestYesterdayCurrencyValue: PropTypes.func\n};\n\nconst mapStateToProps = (state) => ({\n\tcurrencyInfo: state.currency\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\trequestYesterdayCurrencyValue: (base) => dispatch(CurrencyActionCreators.getYesterdayCurrencyValue(base))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRates);\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './components/Header';\nimport TabContainer from './components/TabContainer';\nimport TableRates from './components/TableRates';\nimport { IntlProvider } from 'react-intl';\nimport { getCurrentLocale } from './languageProvider/languageProvider';\n\nfunction App() {\n\tconst currentAppLocale = getCurrentLocale();\n\treturn (\n\t\t<IntlProvider locale={currentAppLocale.locale} messages={currentAppLocale.messages} textComponent={React.Fragment}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<main className='App'>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className='background-gradient'></div>\n\t\t\t\t\t<TabContainer />\n\t\t\t\t\t<TableRates />\n\t\t\t\t</main>\n\t\t\t</BrowserRouter>\n\t\t</IntlProvider>\n\t);\n}\n\nexport default App;\n","import englishMessages from './locales/en_US.json';\nimport spanishMessages from './locales/es_ES.json';\n\nexport function getCurrentLocale() {\n\tconst userLanguage = (navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage;\n\tif (userLanguage === 'en-US') {\n\t\treturn {\n\t\t\tlocale: 'en',\n\t\t\tmessages: {\n\t\t\t\t...englishMessages\n\t\t\t}\n\t\t};\n\t}\n\n\t// Default spanish\n\treturn {\n\t\tlocale: 'es',\n\t\tmessages: {\n\t\t\t...spanishMessages\n\t\t}\n\t};\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport store from './store/configStore';\nimport App from './App';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}